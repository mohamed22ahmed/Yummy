import{k as i,A as e}from"./index.f6661a24.js";const h=i("DriverStore",{state:()=>({loading:!1,data:[],active_task:[],has_data:!1,zone_list:[],group_list:[],is_refresh:!1,vehicle_attributes:[],driver_list:[],schedule_data:[],promo_attributes_data:[],loading_balance:!1,balance_data:[],payment_list:[]}),getters:{getDrivers(t){return t.data},hasDrivers(t){return t.has_data},hasDriverData(t){return Object.keys(this.data).length>0},getActiveTask(t){return t.active_task},getLoading(t){return t.loading},getZone(t){return t.zone_list},getGroup(t){return t.group_list},getVehicleAttributes(t){return t.vehicle_attributes},getDriverList(t){return t.driver_list},getScheduleAttributes(t){return t.schedule_data},getPromoAttributes(t){return t.promo_attributes_data},getMerchantBalance(t){return t.balance_data},getPaymentProviderByMerchant(t){return t.payment_list}},actions:{getAvailableDriver(t,a){this.loading=!0,e.fetchDataByTokenPost("getAvailableDriver",t).then(r=>{this.has_data=!0,this.data=r.details.data,this.active_task=r.details.active_task}).catch(r=>{this.data=[],this.active_task=[]}).then(r=>{this.loading=!1,this.is_refresh=!1,e.empty(a)||a()})},getZoneList(){e.fetchDataByTokenPost("getZoneList").then(t=>{this.zone_list=t.details}).catch(t=>{}).then(t=>{})},getGroupList(){e.fetchDataByTokenPost("getGroupList").then(t=>{this.group_list=t.details}).catch(t=>{}).then(t=>{})},VehicleAttributes(){e.fetchDataByTokenPost("VehicleAttributes").then(t=>{this.vehicle_attributes=t.details}).catch(t=>{this.vehicle_attributes=[]}).then(t=>{})},DriverList(){e.fetchDataByTokenPost("SelectDriverList").then(t=>{this.driver_list=t.details}).catch(t=>{this.driver_list=[]}).then(t=>{})},ScheduleAttributes(t){e.fetchDataByTokenPost("ScheduleAttributes","employment_type="+t).then(a=>{this.schedule_data=a.details}).catch(a=>{this.schedule_data=[]}).then(a=>{})},PromoAttributes(){e.fetchDataByTokenPost("PromoAttributes").then(t=>{this.promo_attributes_data=t.details}).catch(t=>{this.promo_attributes_data=[]}).then(t=>{})},MerchantBalance(){this.loading_balance=!0,e.fetchDataByTokenPost("getMerchantBalance").then(t=>{this.balance_data=t.details}).catch(t=>{}).then(t=>{this.loading_balance=!1})},PaymentProviderByMerchant(){e.fetchDataByTokenPost("PaymentProviderByMerchant").then(t=>{this.payment_list=t.details}).catch(t=>{}).then(t=>{})}}});export{h as u};
